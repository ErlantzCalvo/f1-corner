---
import { Image } from 'astro:assets';
interface Item {
  name: string;
  points: string;
  image: string | null;
}

interface Props {
  items: Item[];
}
const { items } = Astro.props;
---

<div id="leaderboard">
  <table>
    {
      items?.map((item, idx) => (
        <tr
          class:list={[
            { first: idx === 0, second: idx === 1, third: idx === 2 },
          ]}
        >
          <td class="number">{idx + 1}</td>
          <td class="driver-image">
            <img src={item.image!} alt={item.name} height="60px" loading="lazy"/>
          </td>
          <td class="name">
            {item.name}
          </td>
          <td class="points">{item.points}</td>
        </tr>
      ))
    }
  </table>
</div>

<style>
  #leaderboard {
    width: 100%;
    position: relative;
  }

  table {
    width: 100%;
    border-collapse: collapse;
    table-layout: fixed;
    cursor: default;
  }

  .dark table {
    color: #c9cace;
  }

  tr {
    transition: all 0.2s ease-in-out;
    border-radius: 0.2rem;
  }

  tr:hover {
    background-color: #fff;
    transform: scale(1.1);
    -webkit-box-shadow: 0px 5px 15px 8px #e4e7fb;
    box-shadow: 0px 5px 15px 8px #e4e7fb;
  }

  html.dark tr:hover {
    background-color: #555353;
    color: #fff;
    box-shadow: 0px 5px 15px 8px #611f1f;
  }

  td {
    height: 5rem;
    font-size: 1.4rem;
    padding: 1rem;
    position: relative;
  }

  .number {
    width: 10%;
    font-size: 2.2rem;
    font-weight: bold;
    text-align: center;
    padding: 0;
  }

  .driver-image {
    width: 80px;
  }
  
  .driver-image > img {
    position: relative;
    transition: all 0.2s ease-in-out;
  }
  
  .driver-image > img:hover {
    position: relative;
    transform: scale(3);
    z-index: 2 !important;
    border-radius: 50%;
  }

  .name {
    text-align: left;
    font-size: 1.2rem;
    width: 60%;
  }

  .points {
    width: 20%;
    font-weight: bold;
    font-size: 1.3rem;
    display: flex;
    justify-content: flex-end;
    align-items: center;
  }

</style>
